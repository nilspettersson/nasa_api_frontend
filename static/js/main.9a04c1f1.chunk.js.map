{"version":3,"sources":["components/nav.jsx","components/pages/home.jsx","components/image.jsx","components/pages/explore.jsx","components/pages/notFound.jsx","App.js","serviceWorker.js","index.js"],"names":["Nav","state","className","href","Component","Home","imgLoaded","imgUrl","title","explanation","fetch","then","res","json","console","log","setState","url","page","smooth","duration","offset","to","this","showImage","id","src","Image","props","date","substring","Explore","search","loaded","images","handleClick","collection","items","handleChange","event","target","value","type","onChange","onClick","showImages","map","image","index","key","links","data","date_created","NotFound","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9a04c1f1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Nav extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (\r\n            <nav>\r\n                <a className=\"title\" href=\"/home\">NASA EXPLORER</a>\r\n                <a className=\"link\" href=\"/home\">Home</a>\r\n                <a className=\"link\" href=\"/explore\">Explore</a>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Nav;","import React, { Component } from 'react';\r\nimport Nav from \"../nav\"\r\nimport { Link } from \"react-scroll\";\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        imgLoaded:false,\r\n        imgUrl:\"\",\r\n        title:\"\",\r\n        explanation:\"\",\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        fetch(\"https://api.nasa.gov/planetary/apod?api_key=3lAiOi562emtnie1O6cdo43rupWcM8idQryj7g5E\")\r\n            .then(res => res\r\n            .json()).then(json => {\r\n                console.log(json);\r\n                this.setState({\r\n                    imgLoaded: true,\r\n                    imgUrl: json.url,\r\n                    title: json.title,\r\n                    explanation: json.explanation\r\n                })\r\n            });\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div>\r\n                <Nav page={\"home\"} />\r\n\r\n                <header>\r\n                    <h1 className=\"header\">NASA api Explorer</h1>\r\n                    <h3 className=\"header2\">Explore NASA images and more</h3>\r\n                    <div className=\"buttons\">\r\n                        <a href=\"/explore\" className=\"primary-button\">Explore</a>\r\n                        <Link \r\n                            className=\"secondary-button\" \r\n                            smooth={true}\r\n                            duration={500}\r\n                            offset={-180}\r\n                            to=\"todayImage\">Image of the day\r\n                        </Link>\r\n                    </div>\r\n                    \r\n                </header>\r\n                \r\n                <div className=\"page-header\">\r\n                    <h3>Image of the day</h3>\r\n                </div>\r\n                \r\n                {this.showImage()}\r\n\r\n                \r\n            </div>\r\n            \r\n        );\r\n    }\r\n\r\n    showImage(){\r\n        if(this.state.imgLoaded == true){\r\n            return (\r\n                <div id=\"todayImage\" className=\"todayImage padding\">\r\n                    <h4>{this.state.title}</h4>\r\n                    <div>\r\n                        <img src={this.state.imgUrl}/>\r\n                        <p>{this.state.explanation}</p>\r\n                    </div>\r\n                </div>\r\n                \r\n            )\r\n        }\r\n        return null\r\n        \r\n    }\r\n}\r\n \r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass Image extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (\r\n            <div className=\"image\">\r\n                <img src={this.props.href} />\r\n                <p className=\"image-title\">{this.props.title}</p>\r\n                <p className=\"image-date\">{this.props.date.substring(0, 10)}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Image;","import React, { Component } from 'react';\r\nimport Nav from \"../nav\"\r\nimport Image from \"../image\";\r\n\r\nclass Explore extends Component {\r\n    state = {\r\n        search:\"\",\r\n        loaded:false,\r\n        images:{}\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(\"https://images-api.nasa.gov/search?media_type=image\")\r\n            .then(res => res\r\n            .json()).then(json => {\r\n                console.log(json.collection.items);\r\n                let images = json.collection.items;\r\n                this.setState({\r\n                    loaded: true,\r\n                    images:images\r\n                });\r\n            });\r\n    }\r\n\r\n    handleClick = () =>{\r\n        fetch(\"https://images-api.nasa.gov/search?q=\" + this.state.search + \"&media_type=image\")\r\n            .then(res => res\r\n            .json()).then(json => {\r\n                console.log(json.collection.items);\r\n                let images = json.collection.items;\r\n                this.setState({\r\n                    loaded: true,\r\n                    images:images\r\n                });\r\n            });\r\n    };\r\n    handleChange = (event) =>{\r\n        this.setState({search:event.target.value});\r\n    };\r\n\r\n    render() { \r\n        return (\r\n            <div>\r\n                <Nav page={\"explore\"} />\r\n\r\n                <div className=\"menu padding\">\r\n                    <h3>Explore NASA images</h3>\r\n                    <div className=\"search-container\">\r\n                        <input \r\n                            className=\"search\" \r\n                            type=\"text\" \r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <img src=\"%PUBLIC_URL%/../res/search.svg\" onClick={this.handleClick}/>\r\n                    </div>\r\n                </div>\r\n                {this.showImages()}\r\n\r\n\r\n            </div>\r\n            \r\n        );\r\n    }\r\n\r\n    showImages(){\r\n        if(this.state.loaded){\r\n            return(\r\n                <div className=\"grid padding\">\r\n                    {this.state.images.map((image, index) => \r\n                    <Image \r\n                        key={index} \r\n                        href={image.links[0].href}\r\n                        title={image.data[0].title}\r\n                        date={image.data[0].date_created}\r\n                    />\r\n                    )}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n \r\nexport default Explore;","import React, { Component } from 'react';\r\n\r\nclass NotFound extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (\r\n            <div>\r\n                <h1>\r\n                    404 Not found!\r\n                </h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default NotFound;","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport './App.css';\nimport Home from \"./components/pages/home\"\nimport Explore from \"./components/pages/explore\"\nimport NotFound from \"./components/pages/notFound\"\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" component={Home}/>\n        <Route path=\"/home\" component={Home}/>\n        <Route path=\"/explore\" component={Explore}/>\n        <Route component={NotFound}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}